cmake_minimum_required(VERSION 3.20.0)
project(Vortex LANGUAGES CXX C)

set(CMAKE_BUILD_WITH_INSTALL_NAME_DIR ON)
set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)  # Ensure Position Independent Code for shared libs

include(CMakeDependentOption)

#-------------------------------------------------------------------------------
# Options and Definitions
#-------------------------------------------------------------------------------

option(VORTEX_BUILD_EMBEDDED "Build Vortex as part of another project" ON)
option(VORTEX_INCLUDE_TESTS "Generate build targets for the MLIR Vortex unit tests." OFF)

#-------------------------------------------------------------------------------
# MLIR/LLVM Configuration (Only Used at Compile Time)
#-------------------------------------------------------------------------------

find_package(HDF5 REQUIRED)
find_package(MLIR REQUIRED CONFIG)

message(STATUS "Using MLIRConfig.cmake in: ${MLIR_DIR}")
message(STATUS "Using LLVMConfig.cmake in: ${LLVM_DIR}")

set(LLVM_RUNTIME_OUTPUT_INTDIR ${CMAKE_BINARY_DIR}/bin)
set(LLVM_LIBRARY_OUTPUT_INTDIR ${CMAKE_BINARY_DIR}/lib)
set(MLIR_BINARY_DIR ${CMAKE_BINARY_DIR})

list(APPEND CMAKE_MODULE_PATH "${MLIR_CMAKE_DIR}")
list(APPEND CMAKE_MODULE_PATH "${LLVM_CMAKE_DIR}")

include(TableGen)
include(AddLLVM)
include(AddMLIR)
include(HandleLLVMOptions)

#-------------------------------------------------------------------------------
# Include and Link Directories (Only at Compile Time)
#-------------------------------------------------------------------------------

set(VORTEX_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
set(VORTEX_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR})
set(VORTEX_MAIN_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)
set(VORTEX_INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/include)

include_directories(${MLIR_INCLUDE_DIRS})
include_directories(${LLVM_INCLUDE_DIRS})
include_directories(${VORTEX_MAIN_INCLUDE_DIR})
include_directories(${VORTEX_INCLUDE_DIR})

link_directories(${LLVM_BUILD_LIBRARY_DIR})

add_definitions(${LLVM_DEFINITIONS})

#-------------------------------------------------------------------------------
# Build the Vortex Compiler (`vortex-compile`)
#-------------------------------------------------------------------------------

file(GLOB VORTEX_COMPILER_SOURCES src/*.cpp src/**/*.cpp)
add_executable(vortex-compile ${VORTEX_COMPILER_SOURCES})

target_include_directories(vortex-compile PUBLIC ${VORTEX_MAIN_INCLUDE_DIR})
target_link_libraries(vortex-compile PRIVATE MLIR HDF5::HDF5)

set_target_properties(vortex-compile PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
)

install(TARGETS vortex-compile DESTINATION bin)

#-------------------------------------------------------------------------------
# Vortex.so: The Compiled Model (Generated by vortex-compile)
#-------------------------------------------------------------------------------

add_custom_command(
    OUTPUT ${CMAKE_BINARY_DIR}/runtime/lib/linux/Vortex.so
    COMMAND ${CMAKE_BINARY_DIR}/bin/vortex-compile my_model.h5 -o ${CMAKE_BINARY_DIR}/runtime/lib/linux/Vortex.so
    DEPENDS vortex-compile my_model.h5
)

add_custom_target(generate_vortex_so ALL DEPENDS ${CMAKE_BINARY_DIR}/runtime/lib/linux/Vortex.so)

#-------------------------------------------------------------------------------
# Install Directories (Packaging)
#-------------------------------------------------------------------------------

install(DIRECTORY include/ DESTINATION runtime/include)
install(DIRECTORY lib/ DESTINATION runtime/src)
install(FILES ${CMAKE_BINARY_DIR}/runtime/lib/linux/Vortex.so DESTINATION runtime/lib/linux)

#-------------------------------------------------------------------------------
# Debian Package Creation (APT)
#-------------------------------------------------------------------------------

set(CPACK_GENERATOR "DEB")
set(CPACK_PACKAGE_NAME "vortex-compiler")
set(CPACK_PACKAGE_VERSION "1.0.0")
set(CPACK_PACKAGE_CONTACT "fabricio.asfora.001@gmail.com")
set(CPACK_DEBIAN_PACKAGE_MAINTAINER "Fabricio Asfora")
set(CPACK_DEBIAN_PACKAGE_DEPENDS "libc6")  # No MLIR/LLVM dependency at runtime
set(CPACK_PACKAGE_DESCRIPTION "Vortex Neural Network Compiler")
set(CPACK_DEBIAN_ARCHITECTURE "i386")
set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}_${CPACK_PACKAGE_VERSION}_${CPACK_DEBIAN_ARCHITECTURE}")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "runtime")

include(CPack)

#-------------------------------------------------------------------------------
# Tests (Optional)
#-------------------------------------------------------------------------------

if(VORTEX_INCLUDE_TESTS)
    include(third_party/cmake-scripts/code-coverage.cmake)

    if(TARGET gtest)
        message(FATAL_ERROR "Unit tests can only be built if MLIR is installed.")
    endif()

    add_subdirectory(third_party/googletest EXCLUDE_FROM_ALL)
endif()

#-------------------------------------------------------------------------------
# Directory Setup
#-------------------------------------------------------------------------------

add_subdirectory(include)
add_subdirectory(lib)
add_subdirectory(test)
